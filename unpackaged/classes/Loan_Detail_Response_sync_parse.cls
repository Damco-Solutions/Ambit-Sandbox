// Generated by Ashwini kumar(Damco-12/21/21)


public class Loan_Detail_Response_sync_parse {

	public class LOAN_DETAIL_Z {
		public LOAN_DETAIL LOAN_DETAIL {get;set;} 

		public LOAN_DETAIL_Z(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'LOAN_DETAIL') {
							LOAN_DETAIL = new LOAN_DETAIL(parser);
						} else {
							System.debug(LoggingLevel.WARN, 'LOAN_DETAIL_Z consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class DISBURSEMENT_DETAIL {
		public String BRANCH {get;set;} 
		public String INSTRUMENT_TYPE {get;set;} 
		public String BANK {get;set;} 
		public Long DISB_PAYMT_ACCOUNT_NUM {get;set;} 
		public String ACCOUNT_TYPE {get;set;} 
		public String APPLICANT_NAME {get;set;} 
		public String DISB_PAYMT_INST_DATE {get;set;} 
		public String APPLICANT_TYPE {get;set;} 
		public String CUSTOMER_ID {get;set;} 
		public Integer DISB_PAYMT_AMT {get;set;} 
		public String DISB_PAYMT_BANK {get;set;} 
		public String DISB_PAYMT_BRANCH {get;set;} 
		public String ACCOUNT {get;set;} 
		public String IFSC_CODE {get;set;} 
		public String MICR_CODE {get;set;} 
		public String DISB_PAYMT_INST_NUM {get;set;} 
		public String BENEFICIARY_NAME {get;set;} 
		public Integer DISBURSED_AMT {get;set;} 

		public DISBURSEMENT_DETAIL(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'BRANCH') {
							BRANCH = parser.getText();
						} else if (text == 'INSTRUMENT_TYPE') {
							INSTRUMENT_TYPE = parser.getText();
						} else if (text == 'BANK') {
							BANK = parser.getText();
						} else if (text == 'DISB_PAYMT_ACCOUNT_NUM') {
							DISB_PAYMT_ACCOUNT_NUM = parser.getLongValue();
						} else if (text == 'ACCOUNT_TYPE') {
							ACCOUNT_TYPE = parser.getText();
						} else if (text == 'APPLICANT_NAME') {
							APPLICANT_NAME = parser.getText();
						} else if (text == 'DISB_PAYMT_INST_DATE') {
							DISB_PAYMT_INST_DATE = parser.getText();
						} else if (text == 'APPLICANT_TYPE') {
							APPLICANT_TYPE = parser.getText();
						} else if (text == 'CUSTOMER_ID') {
							CUSTOMER_ID = parser.getText();
						} else if (text == 'DISB_PAYMT_AMT') {
							DISB_PAYMT_AMT = parser.getIntegerValue();
						} else if (text == 'DISB_PAYMT_BANK') {
							DISB_PAYMT_BANK = parser.getText();
						} else if (text == 'DISB_PAYMT_BRANCH') {
							DISB_PAYMT_BRANCH = parser.getText();
						} else if (text == 'ACCOUNT') {
							ACCOUNT = parser.getText();
						} else if (text == 'IFSC_CODE') {
							IFSC_CODE = parser.getText();
						} else if (text == 'MICR_CODE') {
							MICR_CODE = parser.getText();
						} else if (text == 'DISB_PAYMT_INST_NUM') {
							DISB_PAYMT_INST_NUM = parser.getText();
						} else if (text == 'BENEFICIARY_NAME') {
							BENEFICIARY_NAME = parser.getText();
						} else if (text == 'DISBURSED_AMT') {
							DISBURSED_AMT = parser.getIntegerValue();
						} else {
							System.debug(LoggingLevel.WARN, 'DISBURSEMENT_DETAIL consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class PDC_DETAILS {
		public Integer FUTURE_INSTRUMENT_COUNTS {get;set;} 
		public Integer SECURITY_PDC_COUNTS {get;set;} 

		public PDC_DETAILS(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'FUTURE_INSTRUMENT_COUNTS') {
							FUTURE_INSTRUMENT_COUNTS = parser.getIntegerValue();
						} else if (text == 'SECURITY_PDC_COUNTS') {
							SECURITY_PDC_COUNTS = parser.getIntegerValue();
						} else {
							System.debug(LoggingLevel.WARN, 'PDC_DETAILS consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class ADDRESSDETAIL {
		public String MOBILE2 {get;set;} 
		public String ADDRESSTYPE {get;set;} 
		public String STATE {get;set;} 
		public String EMAIL {get;set;} 
		public Integer PINCODE {get;set;} 
		public Integer STAY_IN_AREA_MONTHS {get;set;} 
		public String DISTRICT {get;set;} 
		public String GST_APPLICABLE {get;set;} 
		public String ADDRESS1 {get;set;} 
		public String ADDRESS3 {get;set;} 
		public String ADDRESS2 {get;set;} 
		public Integer STAY_IN_AREA_YEARS {get;set;} 
		public String DESTINATION_ADDRESS {get;set;} 
		public String GSTIN_NO {get;set;} 
		public String MAILING_ADDRESS {get;set;} 
		public String EXT1 {get;set;} 
		public String EXT2 {get;set;} 
		public String COMPANY_NAME {get;set;} 
		public String OCCUPANCY_STATUS {get;set;} 
		public String LANDMARK {get;set;} 
		public String CITY {get;set;} 
		public String PHONE2 {get;set;} 
		public String PHONE1 {get;set;} 
		public String FAX {get;set;} 
		public Long MOBILE {get;set;} 

		public ADDRESSDETAIL(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'MOBILE2') {
							MOBILE2 = parser.getText();
						} else if (text == 'ADDRESSTYPE') {
							ADDRESSTYPE = parser.getText();
						} else if (text == 'STATE') {
							STATE = parser.getText();
						} else if (text == 'EMAIL') {
							EMAIL = parser.getText();
						} else if (text == 'PINCODE') {
							PINCODE = parser.getIntegerValue();
						} else if (text == 'STAY_IN_AREA_MONTHS') {
							STAY_IN_AREA_MONTHS = parser.getIntegerValue();
						} else if (text == 'DISTRICT') {
							DISTRICT = parser.getText();
						} else if (text == 'GST_APPLICABLE') {
							GST_APPLICABLE = parser.getText();
						} else if (text == 'ADDRESS1') {
							ADDRESS1 = parser.getText();
						} else if (text == 'ADDRESS3') {
							ADDRESS3 = parser.getText();
						} else if (text == 'ADDRESS2') {
							ADDRESS2 = parser.getText();
						} else if (text == 'STAY_IN_AREA_YEARS') {
							STAY_IN_AREA_YEARS = parser.getIntegerValue();
						} else if (text == 'DESTINATION_ADDRESS') {
							DESTINATION_ADDRESS = parser.getText();
						} else if (text == 'GSTIN_NO') {
							GSTIN_NO = parser.getText();
						} else if (text == 'MAILING_ADDRESS') {
							MAILING_ADDRESS = parser.getText();
						} else if (text == 'EXT1') {
							EXT1 = parser.getText();
						} else if (text == 'EXT2') {
							EXT2 = parser.getText();
						} else if (text == 'COMPANY_NAME') {
							COMPANY_NAME = parser.getText();
						} else if (text == 'OCCUPANCY_STATUS') {
							OCCUPANCY_STATUS = parser.getText();
						} else if (text == 'LANDMARK') {
							LANDMARK = parser.getText();
						} else if (text == 'CITY') {
							CITY = parser.getText();
						} else if (text == 'PHONE2') {
							PHONE2 = parser.getText();
						} else if (text == 'PHONE1') {
							PHONE1 = parser.getText();
						} else if (text == 'FAX') {
							FAX = parser.getText();
						} else if (text == 'MOBILE') {
							MOBILE = parser.getLongValue();
						} else {
							System.debug(LoggingLevel.WARN, 'ADDRESSDETAIL consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class CHARGEDETAIL {
		public Integer LOANCHARGEID {get;set;} 
		public String CHARGE_NATURE {get;set;} 
		public Integer CHARGE_BALANCE_AMOUNT {get;set;} 
		public String CHARGE_NAME {get;set;} 
		public Integer CHARGE_ID {get;set;} 

		public CHARGEDETAIL(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'LOANCHARGEID') {
							LOANCHARGEID = parser.getIntegerValue();
						} else if (text == 'CHARGE_NATURE') {
							CHARGE_NATURE = parser.getText();
						} else if (text == 'CHARGE_BALANCE_AMOUNT') {
							CHARGE_BALANCE_AMOUNT = parser.getIntegerValue();
						} else if (text == 'CHARGE_NAME') {
							CHARGE_NAME = parser.getText();
						} else if (text == 'CHARGE_ID') {
							CHARGE_ID = parser.getIntegerValue();
						} else {
							System.debug(LoggingLevel.WARN, 'CHARGEDETAIL consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class NACH_DETAILS {
		public Integer NACH_BANK_MICR_CODE {get;set;} 
		public String NACH_BANK_BRANCH {get;set;} 
		public String NACH_BANK_REJECT_REASON_CODE {get;set;} 
		public String NACH_BANK_IFSC_CODE {get;set;} 
		public String NACH_BANK_NAME {get;set;} 
		public Integer NACH_BANK_NACH_STATUS {get;set;} 
		public String NACH_BANK_REMARKS {get;set;} 
		public string NACH_BANK_ACCOUNT_NUM {get;set;} 
		public String NACH_BANK_UMRN {get;set;} 
		public String NACH_BANK_ACCOUNT_TYPE {get;set;} 

		public NACH_DETAILS(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'NACH_BANK_MICR_CODE') {
							NACH_BANK_MICR_CODE = parser.getIntegerValue();
						} else if (text == 'NACH_BANK_BRANCH') {
							NACH_BANK_BRANCH = parser.getText();
						} else if (text == 'NACH_BANK_REJECT_REASON_CODE') {
							NACH_BANK_REJECT_REASON_CODE = parser.getText();
						} else if (text == 'NACH_BANK_IFSC_CODE') {
							NACH_BANK_IFSC_CODE = parser.getText();
						} else if (text == 'NACH_BANK_NAME') {
							NACH_BANK_NAME = parser.getText();
						} else if (text == 'NACH_BANK_NACH_STATUS') {
							NACH_BANK_NACH_STATUS = parser.getIntegerValue();
						} else if (text == 'NACH_BANK_REMARKS') {
							NACH_BANK_REMARKS = parser.getText();
						} else if (text == 'NACH_BANK_ACCOUNT_NUM') {
							NACH_BANK_ACCOUNT_NUM = parser.getText();
						} else if (text == 'NACH_BANK_UMRN') {
							NACH_BANK_UMRN = parser.getText();
						} else if (text == 'NACH_BANK_ACCOUNT_TYPE') {
							NACH_BANK_ACCOUNT_TYPE = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'NACH_DETAILS consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class PDD_DOCUMENT {
		public Integer CREATED_BY {get;set;} 
		public String DOCUMENT_COPY {get;set;} 
		public String CREATED_DATE {get;set;} 
		public String APPLICANT_TYPE {get;set;} 
		public String DOCUMENT_DESC {get;set;} 
		public String EXPIRY_DATE {get;set;} 
		public String DOCUMENT_NAME {get;set;} 
		public String STATUS {get;set;} 
		public String LAST_UPD_DATE {get;set;} 
		public String OSV {get;set;} 
		public String TARGET_DATE {get;set;} 
		public String CUSTOMER_NAME {get;set;} 
		public String RECEIVED_DATE {get;set;} 
		public String LAST_UPD_BY {get;set;} 
		public String DOCUMENT_TYPE {get;set;} 

		public PDD_DOCUMENT(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'CREATED_BY') {
							CREATED_BY = parser.getIntegerValue();
						} else if (text == 'DOCUMENT_COPY') {
							DOCUMENT_COPY = parser.getText();
						} else if (text == 'CREATED_DATE') {
							CREATED_DATE = parser.getText();
						} else if (text == 'APPLICANT_TYPE') {
							APPLICANT_TYPE = parser.getText();
						} else if (text == 'DOCUMENT_DESC') {
							DOCUMENT_DESC = parser.getText();
						} else if (text == 'EXPIRY_DATE') {
							EXPIRY_DATE = parser.getText();
						} else if (text == 'DOCUMENT_NAME') {
							DOCUMENT_NAME = parser.getText();
						} else if (text == 'STATUS') {
							STATUS = parser.getText();
						} else if (text == 'LAST_UPD_DATE') {
							LAST_UPD_DATE = parser.getText();
						} else if (text == 'OSV') {
							OSV = parser.getText();
						} else if (text == 'TARGET_DATE') {
							TARGET_DATE = parser.getText();
						} else if (text == 'CUSTOMER_NAME') {
							CUSTOMER_NAME = parser.getText();
						} else if (text == 'RECEIVED_DATE') {
							RECEIVED_DATE = parser.getText();
						} else if (text == 'LAST_UPD_BY') {
							LAST_UPD_BY = parser.getText();
						} else if (text == 'DOCUMENT_TYPE') {
							DOCUMENT_TYPE = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'PDD_DOCUMENT consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class LOAN_DETAIL {
		public String INC_METHOD {get;set;} 
		public String INTTYPE {get;set;} 
		public String PROSPECT_CODE {get;set;} 
		public Integer ADV_INST {get;set;} 
		public List<PDD_DOCUMENT> PDD_DOCUMENT {get;set;} 
		public String FORM_NUMBER {get;set;} 
		public Integer TENOR_MONTHS {get;set;} 
		public String REPAYMENT_MODE {get;set;} 
		public String MAX_FOIR_PERCENTAGE {get;set;} 
		public Integer MORATORIUM_PERIOD_MON {get;set;} 
		public String UNBILLED_PRINCIPAL {get;set;} 
		public String PRE_EMI_DATE {get;set;} 
		public String ADV_EMI_AMT {get;set;} 
		public Integer DISB_AMT {get;set;} 
		public Integer INSTL_NO {get;set;} 
		public String EMI {get;set;} 
		public String INSTTYPEID {get;set;} 
		public String EFFEECTIVE_RATE {get;set;} 
		public String APPLICANT_CODE {get;set;} 
		public List<DISBURSEMENT_DETAIL> DISBURSEMENT_DETAIL {get;set;} 
		public PDC_DETAILS PDC_DETAILS {get;set;} 
		public Integer ELIGIBLELOANAMT {get;set;} 
		public String PRODUCT_NAME {get;set;} 
		//public List<CUSTOMER_DETAIL> CUSTOMER_DETAIL {get;set;} 
		public String AFFORDABLE_EMI {get;set;} 
		public String CUSTOMER_GROUP {get;set;} 
		public String POS {get;set;} 
		public String CURRENTLY_ASSIGNED_TO {get;set;} 
		public String DPD {get;set;} 
		public Integer NO_OF_ADV_EMI {get;set;} 
		public Integer ELIGIBLE_LOAN_AMT_LTV {get;set;} 
		public String LAST_TRANCHE_DISBURSED {get;set;} 
		public Integer INT_RATE {get;set;} 
		public String CUST_ENTITYTYP_ENAME {get;set;} 
		public String SCHEME_NAME {get;set;} 
		public String BUSINESS_DATE {get;set;} 
		public String MATURITY_DATE {get;set;} 
		public Integer DBR_PERCENTAGE {get;set;} 
		public Integer LOAN_AMOUNT {get;set;} 
		public String SCHEME {get;set;} 
		public Integer SANCTIONED_AMOUNT {get;set;} 
		public String LOANSUBSTATUSID {get;set;} 
		public String NPA_STAGE {get;set;} 
		public String ASSIGNED_DATE_TIME {get;set;} 
		public List<REPAYMENTSCH> REPAYMENTSCH {get;set;} 
		public String BRANCH {get;set;} 
		public Integer TENOR {get;set;} 
		public String DISBURSAL_DATE {get;set;} 
		public String TARGET_IRR {get;set;} 
		public List<CHARGEDETAIL> CHARGEDETAIL {get;set;} 
		public String ASSET_VALUE {get;set;} 
		public NACH_DETAILS NACH_DETAILS {get;set;} 
		public String MAX_LTV_PERCENTAGE {get;set;} 
		public Integer TENOR_DAYS {get;set;} 
		public Integer PRE_EMI_AMT {get;set;} 
		public String INST_TYPE {get;set;} 
		public String LTV_PERCENTAGE {get;set;} 
		public String CUSTOMER_NAME {get;set;} 
		public String DPD_STRING {get;set;} 
		public String REPAYMENT_FREQUENCY {get;set;} 
		public String LOAN_STATUS {get;set;} 
		public String APPLICATION_DATE {get;set;} 
		public String EMI_START_DATE {get;set;} 
		public Integer DISBAMT {get;set;} 
		public String SANCTION_DATE {get;set;} 
		public List<LOAN_ACTIVITY> LOAN_ACTIVITY {get;set;} 

		public LOAN_DETAIL(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'INC_METHOD') {
							INC_METHOD = parser.getText();
						} else if (text == 'INTTYPE') {
							INTTYPE = parser.getText();
						} else if (text == 'PROSPECT_CODE') {
							PROSPECT_CODE = parser.getText();
						} else if (text == 'ADV_INST') {
							ADV_INST = parser.getIntegerValue();
						} else if (text == 'PDD_DOCUMENT') {
						 PDD_DOCUMENT = arrayOfPDD_DOCUMENT(parser);
						}
						 else if (text == 'FORM_NUMBER') {
							FORM_NUMBER = parser.getText();
						} else if (text == 'TENOR_MONTHS') {
							TENOR_MONTHS = parser.getIntegerValue();
						} else if (text == 'REPAYMENT_MODE') {
							REPAYMENT_MODE = parser.getText();
						} else if (text == 'MAX_FOIR_PERCENTAGE') {
							MAX_FOIR_PERCENTAGE = parser.getText();
						} else if (text == 'MORATORIUM_PERIOD_MON') {
							MORATORIUM_PERIOD_MON = parser.getIntegerValue();
						} else if (text == 'UNBILLED_PRINCIPAL') {
							UNBILLED_PRINCIPAL = parser.getText();
						} else if (text == 'PRE_EMI_DATE') {
							PRE_EMI_DATE = parser.getText();
						} else if (text == 'ADV_EMI_AMT') {
							ADV_EMI_AMT = parser.getText();
						} else if (text == 'DISB_AMT') {
							DISB_AMT = parser.getIntegerValue();
						} else if (text == 'INSTL_NO') {
							INSTL_NO = parser.getIntegerValue();
						} else if (text == 'EMI') {
							EMI = parser.getText();
						} else if (text == 'INSTTYPEID') {
							INSTTYPEID = parser.getText();
						} else if (text == 'EFFEECTIVE_RATE') {
							EFFEECTIVE_RATE = parser.getText();
						} else if (text == 'APPLICANT_CODE') {
							APPLICANT_CODE = parser.getText();
						} //else if (text == 'DISBURSEMENT_DETAIL') {
						//DISBURSEMENT_DETAIL = arrayOfDISBURSEMENT_DETAIL(parser);
						//}
						 else if (text == 'PDC_DETAILS') {
							PDC_DETAILS = new PDC_DETAILS(parser);
						} else if (text == 'ELIGIBLELOANAMT') {
							ELIGIBLELOANAMT = parser.getIntegerValue();
						} else if (text == 'PRODUCT_NAME') {
							PRODUCT_NAME = parser.getText();
						}// else if (text == 'CUSTOMER_DETAIL') {
						//	CUSTOMER_DETAIL = arrayOfCUSTOMER_DETAIL(parser);
						//}
						
						 else if (text == 'AFFORDABLE_EMI') {
							AFFORDABLE_EMI = parser.getText();
						} else if (text == 'CUSTOMER_GROUP') {
							CUSTOMER_GROUP = parser.getText();
						} else if (text == 'POS') {
							POS = parser.getText();
						} else if (text == 'CURRENTLY_ASSIGNED_TO') {
							CURRENTLY_ASSIGNED_TO = parser.getText();
						} else if (text == 'DPD') {
							DPD = parser.getText();
						} else if (text == 'NO_OF_ADV_EMI') {
							NO_OF_ADV_EMI = parser.getIntegerValue();
						} else if (text == 'ELIGIBLE_LOAN_AMT_LTV') {
							ELIGIBLE_LOAN_AMT_LTV = parser.getIntegerValue();
						} else if (text == 'LAST_TRANCHE_DISBURSED') {
							LAST_TRANCHE_DISBURSED = parser.getText();
						} else if (text == 'INT_RATE') {
							INT_RATE = parser.getIntegerValue();
						} else if (text == 'CUST_ENTITYTYP_ENAME') {
							CUST_ENTITYTYP_ENAME = parser.getText();
						} else if (text == 'SCHEME_NAME') {
							SCHEME_NAME = parser.getText();
						} else if (text == 'BUSINESS_DATE') {
							BUSINESS_DATE = parser.getText();
						} else if (text == 'MATURITY_DATE') {
							MATURITY_DATE = parser.getText();
						} else if (text == 'DBR_PERCENTAGE') {
							DBR_PERCENTAGE = parser.getIntegerValue();
						} else if (text == 'LOAN_AMOUNT') {
							LOAN_AMOUNT = parser.getIntegerValue();
						} else if (text == 'SCHEME') {
							SCHEME = parser.getText();
						} else if (text == 'SANCTIONED_AMOUNT') {
							SANCTIONED_AMOUNT = parser.getIntegerValue();
						} else if (text == 'LOANSUBSTATUSID') {
							LOANSUBSTATUSID = parser.getText();
						} else if (text == 'NPA_STAGE') {
							NPA_STAGE = parser.getText();
						} else if (text == 'ASSIGNED_DATE_TIME') {
							ASSIGNED_DATE_TIME = parser.getText();
						} else if (text == 'REPAYMENTSCH') {
							REPAYMENTSCH = arrayOfREPAYMENTSCH(parser);
						} else if (text == 'BRANCH') {
							BRANCH = parser.getText();
						} else if (text == 'TENOR') {
							TENOR = parser.getIntegerValue();
						} else if (text == 'DISBURSAL_DATE') {
							DISBURSAL_DATE = parser.getText();
						} else if (text == 'TARGET_IRR') {
							TARGET_IRR = parser.getText();
						} else if (text == 'CHARGEDETAIL') {
							CHARGEDETAIL = arrayOfCHARGEDETAIL(parser);
						} else if (text == 'ASSET_VALUE') {
							ASSET_VALUE = parser.getText();
						} else if (text == 'NACH_DETAILS') {
							NACH_DETAILS = new NACH_DETAILS(parser);
						} else if (text == 'MAX_LTV_PERCENTAGE') {
							MAX_LTV_PERCENTAGE = parser.getText();
						} else if (text == 'TENOR_DAYS') {
							TENOR_DAYS = parser.getIntegerValue();
						} else if (text == 'PRE_EMI_AMT') {
							PRE_EMI_AMT = parser.getIntegerValue();
						} else if (text == 'INST_TYPE') {
							INST_TYPE = parser.getText();
						} else if (text == 'LTV_PERCENTAGE') {
							LTV_PERCENTAGE = parser.getText();
						} else if (text == 'CUSTOMER_NAME') {
							CUSTOMER_NAME = parser.getText();
						} else if (text == 'DPD_STRING') {
							DPD_STRING = parser.getText();
						} else if (text == 'REPAYMENT_FREQUENCY') {
							REPAYMENT_FREQUENCY = parser.getText();
						} else if (text == 'LOAN_STATUS') {
							LOAN_STATUS = parser.getText();
						} else if (text == 'APPLICATION_DATE') {
							APPLICATION_DATE = parser.getText();
						} else if (text == 'EMI_START_DATE') {
							EMI_START_DATE = parser.getText();
						} else if (text == 'DISBAMT') {
							DISBAMT = parser.getIntegerValue();
						} else if (text == 'SANCTION_DATE') {
							SANCTION_DATE = parser.getText();
						} else if (text == 'LOAN_ACTIVITY') {
							LOAN_ACTIVITY = arrayOfLOAN_ACTIVITY(parser);
						} else {
							System.debug(LoggingLevel.WARN, 'LOAN_DETAIL consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public String STATUS {get;set;} 
	public String MESSAGE {get;set;} 
	public LOAN_DETAIL_Z LOAN_DETAIL {get;set;}
    public LOAN_DETAIL LOAN_DETAILs{get;set;}
    public Loan_Detail_Response_sync_parse Loan_Detail_Response_sync_parse{get;set;}

	public Loan_Detail_Response_sync_parse(JSONParser parser) {
		while (parser.nextToken() != System.JSONToken.END_OBJECT) {
			if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
				String text = parser.getText();
				if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
					if (text == 'STATUS') {
						STATUS = parser.getText();
					} else if (text == 'MESSAGE') {
						MESSAGE = parser.getText();
					} else if (text == 'LOAN_DETAIL') {
						LOAN_DETAIL = new LOAN_DETAIL_Z(parser);
					} else {
						System.debug(LoggingLevel.WARN, 'Loan_Detail_Response_sync_parse consuming unrecognized property: '+text);
						consumeObject(parser);
					}
				}
			}
		}
	}
	
	public class CUSTOMER_DETAIL {
		public String PAN_NUMBER {get;set;} 
		public String LNAME {get;set;} 
		public String MARITAL_STATUS {get;set;} 
		public String ALIAS {get;set;} 
		public String REGISTRATION_NO {get;set;} 
		public String EDUCATIONAL_QUALIFICATION {get;set;} 
		public Integer DEPENDENTS {get;set;} 
		public String NO_OF_DEPENDENTS {get;set;} 
		public String CUSTOMER_ENTITY_TYPE {get;set;} 
		public String DNS_REASON {get;set;} 
		public String AUTHORIZED_CAPITAL {get;set;} 
		public String OTHERS_ID_NUMBER {get;set;} 
		public String APPLICANT_CODE {get;set;} 
		public Integer SALUATION {get;set;} 
		public String FATHER_FNAME {get;set;} 
		public String PSL {get;set;} 
		public String CIN {get;set;} 
		public String TYPE_OF_BUSINESS {get;set;} 
		public String CONSTITUTION {get;set;} 
		public String SPOUSE_MNAME {get;set;} 
		public String PASSPORTNO {get;set;} 
		public String FNAME {get;set;} 
		public String CLUSTERNAME {get;set;} 
		public String COMPANY_NAME {get;set;} 
		public String RELIGION {get;set;} 
		public String OTHER_NAME {get;set;} 
		public String TINNO {get;set;} 
		public String MNAME {get;set;} 
		public String SPOUSE_FNAME {get;set;} 
		public String CLUSTER_DESCRIPTION {get;set;} 
		public String PREF_COMMUNICATION_MODE {get;set;} 
		public String PREF_TIME_TO_CALL {get;set;} 
		public String CKYC_ID {get;set;} 
		public String IS_PAN_AVAILABLE {get;set;} 
		public String KEY_CONTACT_PERSON {get;set;} 
		public String GENDER {get;set;} 
		public String DRIVING_LICENCE_NO {get;set;} 
		public String FORM_60_NAME {get;set;} 
		public String UDYAM_REG_NO {get;set;} 
		public String FATHER_MNAME {get;set;} 
		public String SPOUSE_LNAME {get;set;} 
		public String DNS_REQUIRED {get;set;} 
		public String DATE_OF_INCORPORATION {get;set;} 
		public String SEGMENT {get;set;} 
		public String SOCIAL_CATEGORY {get;set;} 
		public String RELATION {get;set;} 
		public String NAME_AS_PER_AADHAR {get;set;} 
		public String APPLICANT_TYPE {get;set;} 
		public String FATHER_LNAME {get;set;} 
		public String VOTER_ID {get;set;} 
		public String GROUP_NAME {get;set;} 
		public String CUSTOMER_CREDIT_INFO {get;set;} 
		public String DATEOFBIRTH {get;set;} 
		public List<ADDRESSDETAIL> ADDRESSDETAIL {get;set;} 
		public String CUST_CATEGORY {get;set;} 
		public String ADHAAR_AS_KYC {get;set;} 

		public CUSTOMER_DETAIL(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'PAN_NUMBER') {
							PAN_NUMBER = parser.getText();
						} else if (text == 'LNAME') {
							LNAME = parser.getText();
						} else if (text == 'MARITAL_STATUS') {
							MARITAL_STATUS = parser.getText();
						} else if (text == 'ALIAS') {
							ALIAS = parser.getText();
						} else if (text == 'REGISTRATION_NO') {
							REGISTRATION_NO = parser.getText();
						} else if (text == 'EDUCATIONAL_QUALIFICATION') {
							EDUCATIONAL_QUALIFICATION = parser.getText();
						} else if (text == 'DEPENDENTS') {
							DEPENDENTS = parser.getIntegerValue();
						} else if (text == 'NO_OF_DEPENDENTS') {
							NO_OF_DEPENDENTS = parser.getText();
						} else if (text == 'CUSTOMER_ENTITY_TYPE') {
							CUSTOMER_ENTITY_TYPE = parser.getText();
						} else if (text == 'DNS_REASON') {
							DNS_REASON = parser.getText();
						} else if (text == 'AUTHORIZED_CAPITAL') {
							AUTHORIZED_CAPITAL = parser.getText();
						} else if (text == 'OTHERS_ID_NUMBER') {
							OTHERS_ID_NUMBER = parser.getText();
						} else if (text == 'APPLICANT_CODE') {
							APPLICANT_CODE = parser.getText();
						} else if (text == 'SALUATION') {
							SALUATION = parser.getIntegerValue();
						} else if (text == 'FATHER_FNAME') {
							FATHER_FNAME = parser.getText();
						} else if (text == 'PSL') {
							PSL = parser.getText();
						} else if (text == 'CIN') {
							CIN = parser.getText();
						} else if (text == 'TYPE_OF_BUSINESS') {
							TYPE_OF_BUSINESS = parser.getText();
						} else if (text == 'CONSTITUTION') {
							CONSTITUTION = parser.getText();
						} else if (text == 'SPOUSE_MNAME') {
							SPOUSE_MNAME = parser.getText();
						} else if (text == 'PASSPORTNO') {
							PASSPORTNO = parser.getText();
						} else if (text == 'FNAME') {
							FNAME = parser.getText();
						} else if (text == 'CLUSTERNAME') {
							CLUSTERNAME = parser.getText();
						} else if (text == 'COMPANY_NAME') {
							COMPANY_NAME = parser.getText();
						} else if (text == 'RELIGION') {
							RELIGION = parser.getText();
						} else if (text == 'OTHER_NAME') {
							OTHER_NAME = parser.getText();
						} else if (text == 'TINNO') {
							TINNO = parser.getText();
						} else if (text == 'MNAME') {
							MNAME = parser.getText();
						} else if (text == 'SPOUSE_FNAME') {
							SPOUSE_FNAME = parser.getText();
						} else if (text == 'CLUSTER_DESCRIPTION') {
							CLUSTER_DESCRIPTION = parser.getText();
						} else if (text == 'PREF_COMMUNICATION_MODE') {
							PREF_COMMUNICATION_MODE = parser.getText();
						} else if (text == 'PREF_TIME_TO_CALL') {
							PREF_TIME_TO_CALL = parser.getText();
						} else if (text == 'CKYC_ID') {
							CKYC_ID = parser.getText();
						} else if (text == 'IS_PAN_AVAILABLE') {
							IS_PAN_AVAILABLE = parser.getText();
						} else if (text == 'KEY_CONTACT_PERSON') {
							KEY_CONTACT_PERSON = parser.getText();
						} else if (text == 'GENDER') {
							GENDER = parser.getText();
						} else if (text == 'DRIVING_LICENCE_NO') {
							DRIVING_LICENCE_NO = parser.getText();
						} else if (text == 'FORM_60_NAME') {
							FORM_60_NAME = parser.getText();
						} else if (text == 'UDYAM_REG_NO') {
							UDYAM_REG_NO = parser.getText();
						} else if (text == 'FATHER_MNAME') {
							FATHER_MNAME = parser.getText();
						} else if (text == 'SPOUSE_LNAME') {
							SPOUSE_LNAME = parser.getText();
						} else if (text == 'DNS_REQUIRED') {
							DNS_REQUIRED = parser.getText();
						} else if (text == 'DATE_OF_INCORPORATION') {
							DATE_OF_INCORPORATION = parser.getText();
						} else if (text == 'SEGMENT') {
							SEGMENT = parser.getText();
						} else if (text == 'SOCIAL_CATEGORY') {
							SOCIAL_CATEGORY = parser.getText();
						} else if (text == 'RELATION') {
							RELATION = parser.getText();
						} else if (text == 'NAME_AS_PER_AADHAR') {
							NAME_AS_PER_AADHAR = parser.getText();
						} else if (text == 'APPLICANT_TYPE') {
							APPLICANT_TYPE = parser.getText();
						} else if (text == 'FATHER_LNAME') {
							FATHER_LNAME = parser.getText();
						} else if (text == 'VOTER_ID') {
							VOTER_ID = parser.getText();
						} else if (text == 'GROUP_NAME') {
							GROUP_NAME = parser.getText();
						} else if (text == 'CUSTOMER_CREDIT_INFO') {
							CUSTOMER_CREDIT_INFO = parser.getText();
						} else if (text == 'DATEOFBIRTH') {
							DATEOFBIRTH = parser.getText();
						} else if (text == 'ADDRESSDETAIL') {
							ADDRESSDETAIL = arrayOfADDRESSDETAIL(parser);
						} else if (text == 'CUST_CATEGORY') {
							CUST_CATEGORY = parser.getText();
						} else if (text == 'ADHAAR_AS_KYC') {
							ADHAAR_AS_KYC = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'CUSTOMER_DETAIL consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class REPAYMENTSCH {
		public Double CLOSING_PRIN {get;set;} 
		public String DUE_DATE {get;set;} 
		public Double PRINCIPAL {get;set;} 
		public Integer INSTALLMENT_NO {get;set;} 
		public Double OPENING_PRIN {get;set;} 
		public Integer EMI_AMT {get;set;} 
		public Double INTEREST {get;set;} 

		public REPAYMENTSCH(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'CLOSING_PRIN') {
							CLOSING_PRIN = parser.getDoubleValue();
						} else if (text == 'DUE_DATE') {
							DUE_DATE = parser.getText();
						} else if (text == 'PRINCIPAL') {
							PRINCIPAL = parser.getDoubleValue();
						} else if (text == 'INSTALLMENT_NO') {
							INSTALLMENT_NO = parser.getIntegerValue();
						} else if (text == 'OPENING_PRIN') {
							OPENING_PRIN = parser.getDoubleValue();
						} else if (text == 'EMI_AMT') {
							EMI_AMT = parser.getIntegerValue();
						} else if (text == 'INTEREST') {
							INTEREST = parser.getDoubleValue();
						} else {
							System.debug(LoggingLevel.WARN, 'REPAYMENTSCH consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class LOAN_ACTIVITY {
		public String STATUSNAME {get;set;} 
		public Integer SEQNO {get;set;} 
		public String STATUS {get;set;} 
		public String UPDATEDDATETIME {get;set;} 
		public String ACTIVITYNAME {get;set;} 
		public String UPDATEDBY {get;set;} 
		public String UPDATEDDATE {get;set;} 
		public Integer ACTIVITYID {get;set;} 
		public Integer ACTIONID {get;set;} 

		public LOAN_ACTIVITY(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'STATUSNAME') {
							STATUSNAME = parser.getText();
						} else if (text == 'SEQNO') {
							SEQNO = parser.getIntegerValue();
						} else if (text == 'STATUS') {
							STATUS = parser.getText();
						} else if (text == 'UPDATEDDATETIME') {
							UPDATEDDATETIME = parser.getText();
						} else if (text == 'ACTIVITYNAME') {
							ACTIVITYNAME = parser.getText();
						} else if (text == 'UPDATEDBY') {
							UPDATEDBY = parser.getText();
						} else if (text == 'UPDATEDDATE') {
							UPDATEDDATE = parser.getText();
						} else if (text == 'ACTIVITYID') {
							ACTIVITYID = parser.getIntegerValue();
						} else if (text == 'ACTIONID') {
							ACTIONID = parser.getIntegerValue();
						} else {
							System.debug(LoggingLevel.WARN, 'LOAN_ACTIVITY consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	

	
	public static void consumeObject(System.JSONParser parser) {
		Integer depth = 0;
		do {
			System.JSONToken curr = parser.getCurrentToken();
			if (curr == System.JSONToken.START_OBJECT || 
				curr == System.JSONToken.START_ARRAY) {
				depth++;
			} else if (curr == System.JSONToken.END_OBJECT ||
				curr == System.JSONToken.END_ARRAY) {
				depth--;
			}
		} while (depth > 0 && parser.nextToken() != null);
	}
	


    private static List<LOAN_ACTIVITY> arrayOfLOAN_ACTIVITY(System.JSONParser p) {
        List<LOAN_ACTIVITY> res = new List<LOAN_ACTIVITY>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new LOAN_ACTIVITY(p));
        }
        return res;
    }

    private static List<CHARGEDETAIL> arrayOfCHARGEDETAIL(System.JSONParser p) {
        List<CHARGEDETAIL> res = new List<CHARGEDETAIL>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new CHARGEDETAIL(p));
        }
        return res;
    }

    private static List<REPAYMENTSCH> arrayOfREPAYMENTSCH(System.JSONParser p) {
        List<REPAYMENTSCH> res = new List<REPAYMENTSCH>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new REPAYMENTSCH(p));
        }
        return res;
    }

    private static List<CUSTOMER_DETAIL> arrayOfCUSTOMER_DETAIL(System.JSONParser p) {
        List<CUSTOMER_DETAIL> res = new List<CUSTOMER_DETAIL>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new CUSTOMER_DETAIL(p));
        }
        return res;
    }
    
     /*private static List<DISBURSEMENT_DETAIL> arrayOfDISBURSEMENT_DETAIL(System.JSONParser p) {
        List<DISBURSEMENT_DETAIL> res = new List<DISBURSEMENT_DETAIL>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new DISBURSEMENT_DETAIL(p));
        }
        return res;
    }*/
    
      private static List<PDD_DOCUMENT> arrayOfPDD_DOCUMENT(System.JSONParser p) {
        List<PDD_DOCUMENT> res = new List<PDD_DOCUMENT>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new PDD_DOCUMENT(p));
        }
        return res;
    }

    private static List<ADDRESSDETAIL> arrayOfADDRESSDETAIL(System.JSONParser p) {
        List<ADDRESSDETAIL> res = new List<ADDRESSDETAIL>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new ADDRESSDETAIL(p));
        }
        return res;
    }
    
    	public static Loan_Detail_Response_sync_parse parse(String json) {
		System.JSONParser parser = System.JSON.createParser(json);
		return new Loan_Detail_Response_sync_parse(parser);
	}
    public Loan_Detail_Response_sync_parse () {
        
    }


}